generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model spotify_data_sessions {
  id                 String             @id
  user_id            String
  expires_at         DateTime           @db.Timestamptz(6)
  spotify_data_users spotify_data_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spotify_data_sessions_user_id_spotify_data_users_id_fk")
}

model spotify_data_users {
  id                        String                      @id
  spotify_id                String?                     @unique(map: "spotify_data_users_spotify_id_unique")
  username                  String?
  avatar                    String?
  created_at                DateTime                    @default(now()) @db.Timestamp(6)
  access_token              String?
  refresh_token             String?
  spotify_data_sessions     spotify_data_sessions[]
  spotify_data_song_history spotify_data_song_history[]
}

model spotify_data_song_history {
  id                 Int                @id @default(autoincrement())
  spotify_id         String
  title              String
  artist             String
  artist_id          String
  artist_art         String
  art                String
  played_by          String
  played_at          DateTime           @db.Timestamptz(6)
  end_at             DateTime           @db.Timestamptz(6)
  spotify_data_users spotify_data_users @relation(fields: [played_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spotify_data_song_history_played_by_spotify_data_users_id_fk")
}

model spotify_data_artist_images {
  id                Int    @id @default(autoincrement())
  spotify_artist_id String
  image             String
}
